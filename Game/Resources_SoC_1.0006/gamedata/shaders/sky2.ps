#include "common.h"

struct v2p
{
    float4 factor : COLOR0; // rgb tint
    float4 tc0 : TEXCOORD0; // tonemap in alpha
    float3 tc1 : TEXCOORD1;
};
struct _out
{
    float4 low : SV_Target0;
    float4 high : SV_Target1;
};

TextureCube s_sky0 : register(t0);
TextureCube s_sky1 : register(t1);

//////////////////////////////////////////////////////////////////////////////////////////
// Pixel
_out main(v2p I)
{
#ifdef CGIM2
    float3 s0 = s_sky0.SampleLevel(smp_rtlinear, I.tc0.xyz, 0).rgb;
    float3 s1 = s_sky1.SampleLevel(smp_rtlinear, I.tc1, 0).rgb;
#else
    float3 s0 = s_sky0.Sample(smp_rtlinear, I.tc0.xyz);
    float3 s1 = s_sky1.Sample(smp_rtlinear, I.tc1);
#endif

    float3 sky = lerp(s0, s1, I.factor.w) * I.factor.rgb;

    // final tone-mapping
    _out o;
#ifdef ATMOS
    float tm_scale = 1;
#else
    float tm_scale = I.tc0.w;
#endif

#if !defined(ES) || defined(CGIM2)
    TonemapFunctionSky(o.low, o.high, sky, tm_scale * TONEMAP_SCALE_FACTOR);
#else
    tonemap(o.low, o.high, sky, tm_scale); // factor contains tonemapping
#endif

    return o;
}
